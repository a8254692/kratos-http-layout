// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"gitlab.top.slotssprite.com/my/api-layout/internal/biz"
	"gitlab.top.slotssprite.com/my/api-layout/internal/router"
	"gitlab.top.slotssprite.com/my/api-layout/internal/server"
	"gitlab.top.slotssprite.com/my/api-layout/internal/service"
	"gitlab.top.slotssprite.com/my/api-layout/party/bootstrap"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(serviceInfo *bootstrap.ServiceInfo, logger log.Logger) (*kratos.App, func(), error) {
	userServiceClient := service.NewUserRpcClient()
	userService := service.NewUserService(userServiceClient)
	userBiz := biz.NewUserBiz(userService)
	engine := router.NewRouter(userBiz)
	httpServer, err := server.NewHTTPServer(engine)
	if err != nil {
		return nil, nil, err
	}
	monitorServer, err := server.NewMonitorHTTPServer()
	if err != nil {
		return nil, nil, err
	}
	app := newApp(serviceInfo, logger, httpServer, monitorServer)
	return app, func() {
	}, nil
}
